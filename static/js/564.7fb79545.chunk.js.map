{"version":3,"file":"static/js/564.7fb79545.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/pages/MyContactsPage/MyContactsPage.module.css?ea2c","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"Button\":\"ContactForm_Button__jJDZH\",\"label\":\"ContactForm_label__-cVXI\",\"block\":\"ContactForm_block__1h2W+\",\"TextField\":\"ContactForm_TextField__F6G8S\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nconst initialState = {\n  name: '',\n  number: '',\n};\nexport default function ContactForm({ onSubmit }) {\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const [state, setState] = useState(initialState);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setState(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n  const resetForm = () => {\n    setState(initialState);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = state;\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameId} className={css.label}>\n        Name\n        <input\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter the name\"\n          className={css.TextField}\n          value={state.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label htmlFor={numberId} className={css.label}>\n        Number\n        <input\n          id={numberId}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter the number\"\n          className={css.TextField}\n          value={state.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button className={css.Button}>Add contact</button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\",\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nexport default function ContactList({ items, removeContact }) {\n  const elements = items.map(({ name, number, id }) => {\n    return (\n      <li className={css.item} key={id}>\n        {name}: {number}\n        <button className={css.button} onClick={() => removeContact(id)}>\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return <ul className={css.list}>{elements}</ul>;\n}\nContactList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()),\n  removeContact: PropTypes.func,\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  padding: 20px;\n`;\nexport const Title = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 700;\n  font-size: 30px;\n  color: black;\n  margin: 10px 0;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { Container, Title } from \"./Section.styled\";\nimport PropTypes from 'prop-types';\n\nconst Section = ( { title, children } ) => {\n    return (\n        <Container>\n            <Title>{ title }</Title>\n            { children }\n        </Container>\n    )\n}\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n}\nexport default Section;","export const selectFilter = store => store.filter;\n","export const selectContacts = ({ contacts }) => contacts.items;\nexport const selectState = ({ contacts }) => ({\n  isLoading: contacts.isLoading,\n  error: contacts.error,\n});\nexport const selectFilteredContacts = ({ filter, contacts }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const filteredContacts = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const result = normalizedName.includes(normalizedFilter);\n    return result;\n  });\n  return filteredContacts;\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport Section from 'components/Section/Section';\nimport css from '../ContactForm/ContactForm.module.css';\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport {\n  selectFilteredContacts,\n  selectState,\n} from 'redux/contacts/contacts-selectors';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n  const { isLoading, error } = useSelector(selectState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  const onAddContact = contact => {\n    const action = addContact(contact);\n    dispatch(action);\n  };\n\n  const onRemoveContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={onAddContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <label className={css.block}>\n          Find contacts by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            placeholder=\"Enter the name\"\n            className={css.TextField}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n            onChange={handleInputChange}\n          />\n        </label>\n        {!isLoading && contacts.length > 0 && (\n          <ContactList items={contacts} removeContact={onRemoveContact} />\n        )}\n        {isLoading && <Loader />}\n        {error && <p>oops, something went wrong</p>}\n      </Section>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MyContactsPage_Container__lAXZs\"};","// import { Navigate } from 'react-router-dom';\nimport Contacts from 'components/Contacts/Contacts';\nimport css from './MyContactsPage.module.css';\n//\nconst MyContactsPage = () => {\n  // const isUserLogin = useAuth();\n  // if (!isUserLogin) {\n  //   return <Navigate to=\"/login\" />;\n  // }\n  return (\n    <div className={css.Container}>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n"],"names":["initialState","name","number","ContactForm","onSubmit","nameId","nanoid","numberId","useState","state","setState","handleInputChange","event","target","value","prev","className","css","preventDefault","htmlFor","id","type","placeholder","pattern","title","required","onChange","ContactList","items","removeContact","elements","map","onClick","Container","styled","Title","children","selectFilter","store","filter","selectState","contacts","isLoading","error","selectFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","Contacts","useSelector","dispatch","useDispatch","useEffect","fetchContacts","contact","action","addContact","setFilter","length","Loader"],"sourceRoot":""}